{
  
    
        "post0": {
            "title": "How to use regex with Pandas DataFrame",
            "content": "In this tutorial, we will go over some useful functions in pandas that you can use with regular experessions to process texts. . function description . contains() | Test if pattern or regex is contained within a string of a Series or Index. | . count() | Count occurrences of pattern in each string of the Series/Index | . findall() | Find all occurrences of pattern or regular expression in the Series/Index. | . replace() | Replace each occurrence of pattern/regex in the Series/Index with a custom string | . split() | Split strings around given pattern | . Create a DataFrame: . from datasets import load_dataset agnews = load_dataset(&#39;ag_news&#39;) . Using custom data configuration default . Downloading and preparing dataset ag_news/default (download: 29.88 MiB, generated: 30.23 MiB, post-processed: Unknown size, total: 60.10 MiB) to /root/.cache/huggingface/datasets/ag_news/default/0.0.0/bc2bcb40336ace1a0374767fc29bb0296cdaf8a6da7298436239c54d79180548... Dataset ag_news downloaded and prepared to /root/.cache/huggingface/datasets/ag_news/default/0.0.0/bc2bcb40336ace1a0374767fc29bb0296cdaf8a6da7298436239c54d79180548. Subsequent calls will reuse this data. . . agnews.set_format(type=&quot;pandas&quot;) df = agnews[&#39;train&#39;][:] df.head() . text label . 0 Wall St. Bears Claw Back Into the Black (Reute... | 2 | . 1 Carlyle Looks Toward Commercial Aerospace (Reu... | 2 | . 2 Oil and Economy Cloud Stocks&#39; Outlook (Reuters... | 2 | . 3 Iraq Halts Oil Exports from Main Southern Pipe... | 2 | . 4 Oil prices soar to all-time record, posing new... | 2 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; contains . find texts containing the word &quot;business&quot; | . df[df[&#39;text&#39;].str.contains(r&#39; bbusiness b&#39;)].head() . text label . 42 Technology company sues five ex-employees A M... | 2 | . 62 Downhome Pinoy Blues, Intersecting Life Paths,... | 2 | . 63 The Real Time Modern Manila Blues: Bill Monroe... | 2 | . 65 What are the best cities for business in Asia?... | 2 | . 74 HP to Buy Synstar Hewlett-Packard will pay $2... | 2 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; Count . count the total number of times the word &quot;business&quot; occurs in texts | . df[&#39;text&#39;].str.count(r&#39; bbusiness b&#39;).sum() . 2759 . findall . equivalent to re.findall() | see another tutorial on re.findall() and re.search() . | below is an example of how to find all the a&#39;s in texts . | . df[&#39;text&#39;].str.findall(r&#39; ba b&#39;) . 0 [] 1 [a] 2 [] 3 [a] 4 [a] ... 119995 [a] 119996 [a, a, a, a] 119997 [a] 119998 [] 119999 [a] Name: text, Length: 120000, dtype: object . replace . replace the all the occurence of &quot;today&quot; or &quot;Today&quot; with &quot;TODAYYYYYY&quot; | check second to the last row! | . df[&#39;text&#39;].str.replace(r&#39; b[Tt]oday b&#39;,&#39;TODAYYYYYY&#39;) . /usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: FutureWarning: The default value of regex will change from True to False in a future version. &#34;&#34;&#34;Entry point for launching an IPython kernel. . 0 Wall St. Bears Claw Back Into the Black (Reute... 1 Carlyle Looks Toward Commercial Aerospace (Reu... 2 Oil and Economy Cloud Stocks&#39; Outlook (Reuters... 3 Iraq Halts Oil Exports from Main Southern Pipe... 4 Oil prices soar to all-time record, posing new... ... 119995 Pakistan&#39;s Musharraf Says Won&#39;t Quit as Army C... 119996 Renteria signing a top-shelf deal Red Sox gene... 119997 Saban not going to Dolphins yet The Miami Dolp... 119998 TODAYYYYYY&#39;s NFL games PITTSBURGH at NY GIANTS... 119999 Nets get Carter from Raptors INDIANAPOLIS -- A... Name: text, Length: 120000, dtype: object . split . split texts by &quot;the&quot;, the function returns a list of strings | check first row of the output | . df[&#39;text&#39;].str.split(r&quot; bthe b&quot;) . 0 [Wall St. Bears Claw Back Into , Black (Reute... 1 [Carlyle Looks Toward Commercial Aerospace (Re... 2 [Oil and Economy Cloud Stocks&#39; Outlook (Reuter... 3 [Iraq Halts Oil Exports from Main Southern Pip... 4 [Oil prices soar to all-time record, posing ne... ... 119995 [Pakistan&#39;s Musharraf Says Won&#39;t Quit as Army ... 119996 [Renteria signing a top-shelf deal Red Sox gen... 119997 [Saban not going to Dolphins yet The Miami Dol... 119998 [Today&#39;s NFL games PITTSBURGH at NY GIANTS Tim... 119999 [Nets get Carter from Raptors INDIANAPOLIS -- ... Name: text, Length: 120000, dtype: object . You may be interested . how to load datasets from Hugging Face Datasets | .",
            "url": "https://www.intodeeplearning.com/use-regex-with-pandas/",
            "relUrl": "/use-regex-with-pandas/",
            "date": " • May 31, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Search through texts with regex in python",
            "content": "In this tutorial, I will go over two common functions, re.findall() and re.search(), that I find useful to search through texts with. . 1.Create your regular expression pattern . I usually use regex101.com to check if my regular expression pattern matches the text I want . | A screenshot of example usage: . | Some common tokens I use . . : a single character | s : any white space | d : Andy digit | b : Any word boundary | w : any word character | a|b : match either a or b | (...): capture the ... part into groups | a?: zero or one of a | a* : zero or more of a | a+: one or more of a | a{8} : exactly 8 of a | . | . 2. Use re.findall() and re.search() to find your matches . re is a module in the python standard library that provides regular expression matching operation | Two of the most common functions I use are re.findall() and re.search() | . import re . . re.findall() . I use this function when I need to find every matches in the text | If multiple groups are present, it returns a list of tuples of strings matching the group | . Example: . text = &#39;The result depends on the number of capturing groups in the pattern. If there are no groups, return a list of strings matching the whole pattern.&#39; match = re.findall(r&#39; b( w+) b s(groups)&#39;,text) match . [(&#39;capturing&#39;, &#39;groups&#39;), (&#39;no&#39;, &#39;groups&#39;)] . . re.search() . This function returns the first match found in the text | I use this function when I only have to check whether there is a match in the text | . Example: . match = re.search(r&#39; b( w+) b s(groups)&#39;,text) match . &lt;re.Match object; span=(36, 52), match=&#39;capturing groups&#39;&gt; . If you want to check the matching groups of re.search(), you can do: . match.group(0),match.group(1), match.group(2) . (&#39;capturing groups&#39;, &#39;capturing&#39;, &#39;groups&#39;) . If you&#39;re interested in more background reading on regular expressions, here&#39;s an excellent chapter by Dan Jurafsky and James H. Martin. . Reference . official doc of the re module re.findall() | re.search() | . | .",
            "url": "https://www.intodeeplearning.com/search-through-texts-with-regex-in-python/",
            "relUrl": "/search-through-texts-with-regex-in-python/",
            "date": " • May 31, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "How to load datasets from Hugging Face Datasets",
            "content": "The Hugging Face Datasets makes thousands of datasets available that can be found on the Hub. Check if there&#39;s any dataset you would like to try out! In this tutorial, we will load the agnews dataset, a collection of more than 1 million news articles on four categories: world, sports, business, sci/tech. . 1. Install the datasets package . see the installation guide for more information | . !pip install datasets . Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/ Requirement already satisfied: datasets in /usr/local/lib/python3.7/dist-packages (2.2.2) Requirement already satisfied: pyarrow&gt;=6.0.0 in /usr/local/lib/python3.7/dist-packages (from datasets) (6.0.1) Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from datasets) (4.11.3) Requirement already satisfied: dill&lt;0.3.5 in /usr/local/lib/python3.7/dist-packages (from datasets) (0.3.4) Requirement already satisfied: fsspec[http]&gt;=2021.05.0 in /usr/local/lib/python3.7/dist-packages (from datasets) (2022.5.0) Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from datasets) (1.3.5) Requirement already satisfied: xxhash in /usr/local/lib/python3.7/dist-packages (from datasets) (3.0.0) Requirement already satisfied: aiohttp in /usr/local/lib/python3.7/dist-packages (from datasets) (3.8.1) Requirement already satisfied: multiprocess in /usr/local/lib/python3.7/dist-packages (from datasets) (0.70.12.2) Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from datasets) (21.3) Requirement already satisfied: numpy&gt;=1.17 in /usr/local/lib/python3.7/dist-packages (from datasets) (1.21.6) Requirement already satisfied: requests&gt;=2.19.0 in /usr/local/lib/python3.7/dist-packages (from datasets) (2.23.0) Requirement already satisfied: huggingface-hub&lt;1.0.0,&gt;=0.1.0 in /usr/local/lib/python3.7/dist-packages (from datasets) (0.7.0) Requirement already satisfied: responses&lt;0.19 in /usr/local/lib/python3.7/dist-packages (from datasets) (0.18.0) Requirement already satisfied: tqdm&gt;=4.62.1 in /usr/local/lib/python3.7/dist-packages (from datasets) (4.64.0) Requirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from huggingface-hub&lt;1.0.0,&gt;=0.1.0-&gt;datasets) (3.7.0) Requirement already satisfied: pyyaml&gt;=5.1 in /usr/local/lib/python3.7/dist-packages (from huggingface-hub&lt;1.0.0,&gt;=0.1.0-&gt;datasets) (6.0) Requirement already satisfied: typing-extensions&gt;=3.7.4.3 in /usr/local/lib/python3.7/dist-packages (from huggingface-hub&lt;1.0.0,&gt;=0.1.0-&gt;datasets) (4.2.0) Requirement already satisfied: pyparsing!=3.0.5,&gt;=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging-&gt;datasets) (3.0.9) Requirement already satisfied: certifi&gt;=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests&gt;=2.19.0-&gt;datasets) (2022.5.18.1) Requirement already satisfied: chardet&lt;4,&gt;=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests&gt;=2.19.0-&gt;datasets) (3.0.4) Requirement already satisfied: idna&lt;3,&gt;=2.5 in /usr/local/lib/python3.7/dist-packages (from requests&gt;=2.19.0-&gt;datasets) (2.10) Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,&lt;1.26,&gt;=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests&gt;=2.19.0-&gt;datasets) (1.25.11) Requirement already satisfied: multidict&lt;7.0,&gt;=4.5 in /usr/local/lib/python3.7/dist-packages (from aiohttp-&gt;datasets) (6.0.2) Requirement already satisfied: frozenlist&gt;=1.1.1 in /usr/local/lib/python3.7/dist-packages (from aiohttp-&gt;datasets) (1.3.0) Requirement already satisfied: asynctest==0.13.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp-&gt;datasets) (0.13.0) Requirement already satisfied: aiosignal&gt;=1.1.2 in /usr/local/lib/python3.7/dist-packages (from aiohttp-&gt;datasets) (1.2.0) Requirement already satisfied: attrs&gt;=17.3.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp-&gt;datasets) (21.4.0) Requirement already satisfied: async-timeout&lt;5.0,&gt;=4.0.0a3 in /usr/local/lib/python3.7/dist-packages (from aiohttp-&gt;datasets) (4.0.2) Requirement already satisfied: charset-normalizer&lt;3.0,&gt;=2.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp-&gt;datasets) (2.0.12) Requirement already satisfied: yarl&lt;2.0,&gt;=1.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp-&gt;datasets) (1.7.2) Requirement already satisfied: zipp&gt;=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata-&gt;datasets) (3.8.0) Requirement already satisfied: pytz&gt;=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas-&gt;datasets) (2022.1) Requirement already satisfied: python-dateutil&gt;=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas-&gt;datasets) (2.8.2) Requirement already satisfied: six&gt;=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil&gt;=2.7.3-&gt;pandas-&gt;datasets) (1.15.0) . . 2. Loading the dataset . The agnews dataset has data fields of: . text: a string feature. | label: a classification label, with possible values including World (0), Sports (1), Business (2), Sci/Tech (3). | . from datasets import load_dataset agnews = load_dataset(&#39;ag_news&#39;) agnews . Using custom data configuration default Reusing dataset ag_news (/root/.cache/huggingface/datasets/ag_news/default/0.0.0/bc2bcb40336ace1a0374767fc29bb0296cdaf8a6da7298436239c54d79180548) . DatasetDict({ train: Dataset({ features: [&#39;text&#39;, &#39;label&#39;], num_rows: 120000 }) test: Dataset({ features: [&#39;text&#39;, &#39;label&#39;], num_rows: 7600 }) }) . . 3. (Optional) Convert a Dataset object to a Pandas DataFrame . When we&#39;re dealing with data, it&#39;s often more convenient to use a DataFrame. | . agnews.set_format(type=&quot;pandas&quot;) train_df = agnews[&#39;train&#39;][:] train_df.head() . text label . 0 Wall St. Bears Claw Back Into the Black (Reute... | 2 | . 1 Carlyle Looks Toward Commercial Aerospace (Reu... | 2 | . 2 Oil and Economy Cloud Stocks&#39; Outlook (Reuters... | 2 | . 3 Iraq Halts Oil Exports from Main Southern Pipe... | 2 | . 4 Oil prices soar to all-time record, posing new... | 2 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; That&#39;s it! Now you have the dataset at your disposal. Check out the official doc for more information! .",
            "url": "https://www.intodeeplearning.com/how-to-load-datasets-from-hugging-face-datasets/",
            "relUrl": "/how-to-load-datasets-from-hugging-face-datasets/",
            "date": " • May 30, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "How to import custom modules (.py files) from google drive in google colab",
            "content": "1. Mount your google drive in google colab . from google.colab import drive drive.mount(&#39;/content/gdrive/&#39;) . 2. Append the directory to your python path . For example, if you want to import a .py file called mymodule.py in your google drive, which is saved in &quot;/content/drive/MyDrive/example_folder&quot;, you need to add the path of the directory which saves mymodule.py to system path. . from pathlib import Path # the path of the directory which saves your .py file src_dir = Path(&#39;/content/drive/MyDrive/example_folder/&#39;) # add the path to system path import sys try: sys.path.index(str(src_dir)) except ValueError: sys.path.insert(0,str(src_dir)) # print system path sys.path . [&#39;/content/drive/MyDrive/example_folder&#39;, &#39;&#39;, &#39;/content&#39;, &#39;/env/python&#39;, &#39;/usr/lib/python37.zip&#39;, &#39;/usr/lib/python3.7&#39;, &#39;/usr/lib/python3.7/lib-dynload&#39;, &#39;/usr/local/lib/python3.7/dist-packages&#39;, &#39;/usr/lib/python3/dist-packages&#39;, &#39;/usr/local/lib/python3.7/dist-packages/IPython/extensions&#39;, &#39;/root/.ipython&#39;] . . After you follow the above steps, you should see /content/drive/MyDrive/example_folder in sys.path. . Now, try to import your custom module: . from mymodule import welcome welcome() . Nice to meet you! .",
            "url": "https://www.intodeeplearning.com/import-custom-modules-from-gdrive-in-google-colab/",
            "relUrl": "/import-custom-modules-from-gdrive-in-google-colab/",
            "date": " • May 29, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Better ways to create a directory in python",
            "content": "When you&#39;re creating a new directory in python, it&#39;s better to check if that directory exists first, in case your code run into error. . Example 1 . use os.path.exists() to check if the directory&#39;s existence | then create a directory with os.mkdir() only if it does not exist | . import os path_to_dir = &#39;/content/test&#39; if not os.path.exists(path_to_dir): os.mkdir(path_to_dir) . Example 2 . use a try-except block to handle error | . import os path_to_dir = &#39;/content/test&#39; try: os.mkdir(path_to_dir ) except OSError as error: print(error) . [Errno 17] File exists: &#39;/content/test&#39; . Example 3 . use os.mkdirs() when there is any non-existent directory in your path | for instance, you want to create a directory in called /test2 in directory /test1, however directory /test1 is missing. | . import os path_to_dir = &#39;/content/test1/test2/&#39; try: os.mkdir(path_to_dir ) except OSError as error: print(error) .",
            "url": "https://www.intodeeplearning.com/better-ways-to-create-a-directory-in-python/",
            "relUrl": "/better-ways-to-create-a-directory-in-python/",
            "date": " • May 28, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "How to zip a folder and unzip a file in python",
            "content": "Create an example folder with files . %%shell mkdir test touch test/file1.txt touch test/file2.txt . . Zip a folder . import shutil dir_name = &#39;/content/test/&#39; output_filename = &#39;test&#39; shutil.make_archive(output_filename, &#39;zip&#39;, dir_name) . &#39;/content/test.zip&#39; . Unzip a file . import zipfile path_to_zip_file =&#39;/content/test.zip&#39; directory_to_extract_to = &#39;/content/test1/&#39; with zipfile.ZipFile(path_to_zip_file, &#39;r&#39;) as zip_ref: zip_ref.extractall(directory_to_extract_to) . use the code below to delete your zip file if needed: . import os if os.path.exists(path_to_zip_file): os.remove(path_to_zip_file) .",
            "url": "https://www.intodeeplearning.com/how-to-zip-a-folder-and-unzip-a-file/",
            "relUrl": "/how-to-zip-a-folder-and-unzip-a-file/",
            "date": " • May 27, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "How to setup google domain for your fastpages site (or GitHub Pages)",
            "content": "Introduction . When you publish a site with GitHub Pages, the default address will look something like this: https://&lt;username&gt;.github.io/&lt;repo name&gt;. For example, https://intodeeplearning.github.io/blog. . If you’d like to replace the default address with your custom domain, such as https://intodeeplearning.com , follow this tutorial! . What you will get in this tutorial . Setting up a custom www subdomain, such as www.example.com, for your GitHub Pages | having the apex domain, such as example.com, automatically redirect to www.example.com | . What you need . A GitHub repository ready for publishing, such as https://github.com/intodeeplearning/blog | A purchased google domain, such as “intodeeplearning.com” | . . Step 1. Setup in your Github Repo . Go to Settings &gt; Pages &gt; Custom domain, and add you custom domain name, such as “www.intodeeplearning.com” . . | . Step 2. (Optional) You can skip this step if you are NOT using a site generator, such as fastpages, or Jekyll . If you are using fastpages. . Add a CNAME file in the root of your repo. . www.intodeeplearning.com . | In _config.yml set url to your custom www subdomain andbaseurl to &quot;&quot; . . url: &#39;https://www.intodeeplearning.com&#39; baseurl: &#39;&#39; . | In _action_files/settings.ini, empty baseurl. . baseurl= . | You can also refer to Fastpages: using a custom domain . | . Step 3. Let your custom domain point to your GitHub Pages . Go to your google domain registrar and select your domain. . | Go to the DNS tab . . | Under the Resource records section, click Manage custom records . . | Create a CNAME record that points your www subdomain to &lt;your_github_username&gt;.github.io . . Do NOT include the repository name, such as intodeeplearning.github.io/blog. If you include your repository name in the CNAME record to your DNS provider, you’ll get the below message at your GitHub Settings &gt; Pages &gt; Custom domain . . | . | Create an A record that points to the IP addresses for Github Pages. . . IP addresses in the screenshot . 185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153 . | Check here if there’s an update in the IP addresses. . | . | Open Terminal to confirm that your DNS record configured correctly . For CNAME records, do . dig www.intodeeplearning.com +nostats +nocomments +nocmd . You should get . ; &lt;&lt;&gt;&gt; DiG 9.10.6 &lt;&lt;&gt;&gt; www.intodeeplearning.com +nostats +nocomments +nocmd ;; global options: +cmd ;www.intodeeplearning.com. IN A www.intodeeplearning.com. 3312 IN CNAME intodeeplearning.github.io. intodeeplearning.github.io. 3312 IN A 185.199.110.153 intodeeplearning.github.io. 3312 IN A 185.199.111.153 intodeeplearning.github.io. 3312 IN A 185.199.109.153 intodeeplearning.github.io. 3312 IN A 185.199.108.153 . | . | For A records, do . dig intodeeplearning.com +noall +answer -t A . You should get . ;; global options: +cmd intodeeplearning.com. 928 IN A 185.199.109.153 intodeeplearning.com. 928 IN A 185.199.108.153 intodeeplearning.com. 928 IN A 185.199.110.153 intodeeplearning.com. 928 IN A 185.199.111.153 . | . | . | . Step 4. Enable HTTPS for you GitHub Pages . Go to your github repository settings page, under Settings &gt; Pages, remove your custom domain and save. . | Then add it back and save again. . | Now you should be able to check the Enforce HTTPS checkbox . . | Note: DNS changes can take up to 24 hours to propagate. . You may use dns propagation checker to check if you DNS has successfully propagated. . | See GitHub Pages trouble shoot for more questions. . | . | . That’s it! Your website should be publishing at your custom domain now! . Reference . Official Github Tutorial About custom domains and GitHub Pages . We recommend always using a www subdomain configurations for your site. If you configure a www subdomain, we automatically attempt to secure the associated apex domain. . If you configure www.example.com as the custom domain for your site, and you have GitHub Pages DNS records set up for the apex and www domains, then example.com will redirect to www.example.com . wwwsubdomains are the most stable type of custom domain because www subdomains are not affected by changes to the IP addresses of GitHub Enterprise Cloud’s servers. . | Managing a custom domain for your GitHub Pages site | Configuring a subdomain | . | .",
            "url": "https://www.intodeeplearning.com/setup-google-domain-for-github-pages/",
            "relUrl": "/setup-google-domain-for-github-pages/",
            "date": " • May 20, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Embedding images in google drive to markdown",
            "content": "1. Create a link for your image in your google drive . a. Upload your image to your google drive . b. Right-Click the your file . c. Click on Get Link . d. Make sure to change the Restricted mode of sharing to Anyone with the link . . e. Click on Copy Link. The link will be in the following format: https://drive.google.com/file/d/&lt;ID of image&gt;/view?usp=sharing . &lt;ID of image&gt; is your google drive file ID | . f. Get the &lt;ID of image&gt; and create a link in the following format for embedding: https://drive.google.com/uc?id=&lt;ID of image&gt; . This is the link we’ll use in markdown/html code. | . For example: . my link: https://drive.google.com/file/d/1L07w0_Qg9q-0Ukm4-K3i8ffyk34FqTzA/view?usp=sharing | &lt;ID of image&gt; is 1L07w0_Qg9q-0Ukm4-K3i8ffyk34FqTzA | my embedding link: https://drive.google.com/uc?id=1L07w0_Qg9q-0Ukm4-K3i8ffyk34FqTzA | . 2. Use the link in markdown . To embed an image using markdown, use the following: . ![Example Image](https://drive.google.com/uc?id=1bXzYeegauqB2M6-VZwitEeXHmMiYZIUY) . The image will be like: . . 3. (Optional) Use the link in HTML code for more flexibility . Using markdown is easy. However, this does not give us much flexibility in adjusting the images. Instead, we can use the html code below. . &lt;img src=&quot;https://drive.google.com/uc?id=1bXzYeegauqB2M6-VZwitEeXHmMiYZIUY&quot; alt=&quot;sample image&quot; style=&quot;display: block; margin-right: auto; margin-left: auto; width: 90%; box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)&quot; /&gt; . I put some shadow for the image and also shrink it to 90%. The image will be like: . . Reference . css box-shadow | css center images | .",
            "url": "https://www.intodeeplearning.com/embedding-images-in-google-drive-to-markdown/",
            "relUrl": "/embedding-images-in-google-drive-to-markdown/",
            "date": " • May 11, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "How to delete files and folders in python",
            "content": "Delete files . import os path = &#39;/file_name&#39; if os.path.exists(path): os.remove(path) . Delete empty folders . import os path = &#39;/folder_name&#39; if os.path.exists(pathe): os.remdir(path) . Delete folders with files . import shutil path = &#39;/folder_name&#39; if os.path.isdir(path): shutil.rmtree(path) .",
            "url": "https://www.intodeeplearning.com/how-to-delete-files-and-folders-in-python/",
            "relUrl": "/how-to-delete-files-and-folders-in-python/",
            "date": " • May 10, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "How to download files or folders in google drive in python",
            "content": "1. Get a Direct Link for Your Google Drive Files . a. open Google Drive . b. Right-click on your file . c. Click on Get Link . d. Make sure your file is available for “Anyone with the link” . . e. Click on Copy Link . 2. Install gdown . gdown doc | . !pip install gdown . 3. Download the file in google drive using Python . import gdown url = &#39;https://drive.google.com/file/d/1uFTzwFc3tmS-D7azjMiJcxSfn71BPqKt/view?usp=sharing&#39; output_path = &#39;graph_ML.pk&#39; gdown.download(url, output_path, quiet=False,fuzzy=True) . Downloading... From: https://drive.google.com/uc?id=1uFTzwFc3tmS-D7azjMiJcxSfn71BPqKt To: /content/graph_ML.pk 100%|██████████| 1.94G/1.94G [00:23&lt;00:00, 82.2MB/s] . &#39;graph_ML.pk&#39; . . 4. Download a folder in google drive using Python . import gdown url = &quot;https://drive.google.com/drive/folders/1HWFHKCprFzR7H7TYhrE-W7v4bz2Vc7Ia&quot; gdown.download_folder(url, quiet=True, use_cookies=False) . [&#39;/content/ihpperson_data_with_rules/civil_servant.csv&#39;, &#39;/content/ihpperson_data_with_rules/eunuch.csv&#39;, &#39;/content/ihpperson_data_with_rules/general.csv&#39;, &#39;/content/ihpperson_data_with_rules/remain_person.csv&#39;, &#39;/content/ihpperson_data_with_rules/special_general.csv&#39;] . . .",
            "url": "https://www.intodeeplearning.com/how-to-download-files-or-folders-in-gdrive-in-python/",
            "relUrl": "/how-to-download-files-or-folders-in-gdrive-in-python/",
            "date": " • May 8, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "How to Write an Abstract",
            "content": "Why is a good abstract important? . People often judge from an abstract of a paper to decide whether or not they want to invest their time in it. | Online databases typically contain only abstracts. | Editors or reviewers use abstracts as the first parts to evaluate your work. | . Hence, a concise and effective abstract well-describing your work increases search-ability and readership, and most important of all, expedite editorial evaluation. . My steps for writing an abstract . Write the paper first, and then use the abstract as a self-contained summary. | As I start to work on the abstract, I go over the paper and outline the following: . Elements I collect before for an abstract . Motivation of my work (Optional) Why do my readers need to care about the problem? strengthen the importance of my work | . | If 1) the motivation could not be easily written . or 2) the problem is widely recognized as important, I’ll give a brief introduction to the problem/research area instead, or just skip this part. . Ex: mention the difficulty of the research area | . | . | Problem statement What is the problem I am trying to solve? | Clearly define the scope of my work, ex: a general approach, a framework for historical research | . | Approach What is my method? How did I solve the problem? | . | Results What’s the result of my approach? This is usually the evaluation part of the designed model. | ex: better performance. | . | focus on key results and findings | . | Conclusion What are the implications of the results/findings? Why does it matter? What’s the impact? | What is the message I want my readers to take home (remember about my work)? | . | . | Other considerations Include keywords or phrases to help readers search for my paper | Don’t include citations or references, unless you know your audience will be experts in this research area. Keep it straightforward for a general audience | . | After finishing the first draft of the abstract. I check if all the key ideas of the paper are included. |",
            "url": "https://www.intodeeplearning.com/how-to-write-an-abstract/",
            "relUrl": "/how-to-write-an-abstract/",
            "date": " • Apr 25, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://www.intodeeplearning.com/2020/02/20/test.html",
            "relUrl": "/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post12": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://www.intodeeplearning.com/example-markdown/",
            "relUrl": "/example-markdown/",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "About Me",
          "content": "Hi! I created this site to document my learning in deep learning and research. Hope you can find something useful here! .",
          "url": "https://www.intodeeplearning.com/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  
  

  
  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://www.intodeeplearning.com/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}