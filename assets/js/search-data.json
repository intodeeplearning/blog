{
  
    
        "post0": {
            "title": "How to setup google domain for your fastpages site (or GitHub Pages)",
            "content": "Introduction . When you publish a site with GitHub Pages, the default address will look something like this: https://&lt;username&gt;.github.io/&lt;repo name&gt;. For example, https://intodeeplearning.github.io/blog. . If you’d like to replace the default address with your custom domain, such as https://intodeeplearning.com , follow this tutorial! . What you’ll get in this tutorial: . Setting up a custom www subdomain, such as [www.example.com](http://www.example.com), for your GitHub Pages | having the apex domain, such as example.com , automatically redirect to www.example.com. | . What you’ll need . a GitHub repository ready for publishing, such as https://github.com/intodeeplearning/blog | a purchased google domain, such as intodeeplearning.com | . Step 1. Setup in your Github Repo . Go to Settings &gt; Pages &gt; Custom domain, and add you custom domain name. . . | . . Step 2. (Optional) You can skip this step if you are NOT using a site generator, such as fastpages, or Jekyll. . If you are using fastpages. . add a cname file in the root of your repo. . www.intodeeplearning.com . | In [/_config.yml,](https://github.com/fastai/fastpages/blob/master/_config.yml) set url to your custom www subdomain and andbaseurl to &quot;&quot; . . url: &#39;https://www.intodeeplearning.com&#39; baseurl: &#39;&#39; . | In [_action_files](https://github.com/fastai/fastpages/tree/master/_action_files)/settings.ini , empty baseurl. . baseurl= . | you can also refer to Fastpages: using a custom domain . | . Step 3. Let your custom domain point to your GitHub Pages . go to your google domain registrar and select your domain. | go to the DNS tab . . | Under the Resource records section, click Manage custom records . . | create a CNAME record that points your wwwsubdomain, such as www.intodeeplearning.com , to &lt;your_github_username&gt;.github.io such as intodeeplearning.github.io. . . . Do NOT include the repository name, such as intodeeplearning.github.io/blog. If you include your repository name in the CNAME record to your DNS provider, you’ll get the below message at your GitHub Settings &gt; Pages &gt; Custom domain . . . | . | create an A record that points to the IP addresses for Github Pages. . . IP adresses in the screenshot . 185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153 . | check here if there’s an update in the IP addresses. . | . | Open Terminal to confirm that your DNS record configured correctly For CNAME records, do . dig www.intodeeplearning.com +nostats +nocomments +nocmd . | For A records, do . dig intodeeplearning.com +noall +answer -t A . | . | . Step 4. Enable HTTPS for you GitHub Pages . Go to your github repository settings page, under Settings &gt; Pages, remove your custom domain and save. | Then add it back and save again. | Now you should be able to check the “Enforce HTTPS” checkbox . . . | . That’s it! Your website should be publishing at your custom domain now! . Note: DNS changes can take up to 24 hours to propagate. . You may use dns propagation checker to check if you DNS has successfully propagated. | More questions→ See GitHub Pages trouble shoot | . Reference . Official Github Tutorial About custom domains and GitHub Pages . We recommend always using a www subdomain configurations for your site. If you configure a www subdomain, we automatically attempt to secure the associated apex domain. . If you configure [www.example.com](http://www.example.com) as the custom domain for your site, and you have GitHub Pages DNS records set up for the apex and www domains, then example.com will redirect to www.example.com . wwwsubdomains are the most stable type of custom domain because www  subdomains are not affected by changes to the IP addresses of GitHub Enterprise Cloud’s servers. . | Managing a custom domain for your GitHub Pages site | Configuring a subdomain | . | ref: How to setup google domain for github pages However, the www subdomains won’t redirect to the apex domain successfully following its method. | Fix: configure your custom domain as [www.example.com](http://www.example.com) (www subdomain) , instead of example.com ( apex domain). Then example.com will redirect to www.example.com | . | Fastpages: using a custom domain | .",
            "url": "https://www.intodeeplearning.com/setup-google-domain-for-github-pages/",
            "relUrl": "/setup-google-domain-for-github-pages/",
            "date": " • May 20, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Embedding images in google drive to markdown",
            "content": "1. Create a link for your image in your google drive . a. Upload your image to your google drive . b. Right-Click the your file . c. Click on Get Link . d. Make sure to change the Restricted mode of sharing to Anyone with the link . . e. Click on Copy Link. The link will be in the following format: https://drive.google.com/file/d/&lt;ID of image&gt;/view?usp=sharing . &lt;ID of image&gt; is your google drive file ID | . f. Get the &lt;ID of image&gt; and create a link in the following format for embedding: https://drive.google.com/uc?id=&lt;ID of image&gt; . This is the link we’ll use in markdown/html code. | . For example: . my link: https://drive.google.com/file/d/1L07w0_Qg9q-0Ukm4-K3i8ffyk34FqTzA/view?usp=sharing | &lt;ID of image&gt; is 1L07w0_Qg9q-0Ukm4-K3i8ffyk34FqTzA | my embedding link: https://drive.google.com/uc?id=1L07w0_Qg9q-0Ukm4-K3i8ffyk34FqTzA | . 2. Use the link in markdown . To embed an image using markdown, use the following: . ![Example Image](https://drive.google.com/uc?id=1bXzYeegauqB2M6-VZwitEeXHmMiYZIUY) . The image will be like: . . 3. (Optional) Use the link in HTML code for more flexibility . Using markdown is easy. However, this does not give us much flexibility in adjusting the images. Instead, we can use the html code below. . &lt;img src=&quot;https://drive.google.com/uc?id=1bXzYeegauqB2M6-VZwitEeXHmMiYZIUY&quot; alt=&quot;sample image&quot; style=&quot;display: block; margin-right: auto; margin-left: auto; width: 90%; box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)&quot; /&gt; . I put some shadow for the image and also shrink it to 90%. The image will be like: . . Reference . css box-shadow | css center images | .",
            "url": "https://www.intodeeplearning.com/embedding-images-in-google-drive-to-markdown/",
            "relUrl": "/embedding-images-in-google-drive-to-markdown/",
            "date": " • May 11, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "How to delete files and folders with python",
            "content": "Delete files . import os path = &#39;/file_name&#39; if os.path.exists(path): os.remove(path) . Delete empty folders . import os path = &#39;/folder_name&#39; if os.path.exists(pathe): os.remdir(path) . Delete folders with files . import shutil path = &#39;/folder_name&#39; if os.path.isdir(path): shutil.rmtree(path) .",
            "url": "https://www.intodeeplearning.com/how-to-delete-files-and-folders-with-python/",
            "relUrl": "/how-to-delete-files-and-folders-with-python/",
            "date": " • May 10, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "How to download files in google drive with python",
            "content": "1. Get a Direct Link for Your Google Drive Files . a. open Google Drive . b. Right-click on your file . c. Click on Get Link . d. Make sure your file is available for “Anyone with the link” . . e. Click on Copy Link . 2. Install gdown . gdown doc | . !pip install gdown . 3. Download the file in google drive using Python . import gdown url = &#39;https://drive.google.com/file/d/1uFTzwFc3tmS-D7azjMiJcxSfn71BPqKt/view?usp=sharing&#39; output_path = &#39;graph_ML.pk&#39; gdown.download(url, output_path, quiet=False,fuzzy=True) . Downloading... From: https://drive.google.com/uc?id=1uFTzwFc3tmS-D7azjMiJcxSfn71BPqKt To: /content/graph_ML.pk 100%|██████████| 1.94G/1.94G [00:17&lt;00:00, 109MB/s] . &#39;graph_ML.pk&#39; . . .",
            "url": "https://www.intodeeplearning.com/how-to-download-files-in-gdrive-with-python/",
            "relUrl": "/how-to-download-files-in-gdrive-with-python/",
            "date": " • May 8, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "How to Write an Abstract",
            "content": "Why is a good abstract important? . People often judge from an abstract of a paper to decide whether or not they want to invest their time in it. | Online databases typically contain only abstracts. | Editors or reviewers use abstracts as the first parts to evaluate your work. | . Hence, a concise and effective abstract well-describing your work increases search-ability and readership, and most important of all, expedite editorial evaluation. . My steps for writing an abstract . Write the paper first, and then use the abstract as a self-contained summary. | As I start to work on the abstract, I go over the paper and outline the following: . Elements I collect before for an abstract . Motivation of my work (Optional) Why do my readers need to care about the problem? strengthen the importance of my work | . | If 1) the motivation could not be easily written . or 2) the problem is widely recognized as important, I’ll give a brief introduction to the problem/research area instead, or just skip this part. . Ex: mention the difficulty of the research area | . | . | Problem statement What is the problem I am trying to solve? | Clearly define the scope of my work, ex: a general approach, a framework for historical research | . | Approach What is my method? How did I solve the problem? | . | Results What’s the result of my approach? This is usually the evaluation part of the designed model. | ex: better performance. | . | focus on key results and findings | . | Conclusion What are the implications of the results/findings? Why does it matter? What’s the impact? | What is the message I want my readers to take home (remember about my work)? | . | . | Other considerations Include keywords or phrases to help readers search for my paper | Don’t include citations or references, unless you know your audience will be experts in this research area. Keep it straightforward for a general audience | . | After finishing the first draft of the abstract. I check if all the key ideas of the paper are included. |",
            "url": "https://www.intodeeplearning.com/how-to-write-an-abstract/",
            "relUrl": "/how-to-write-an-abstract/",
            "date": " • Apr 25, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://www.intodeeplearning.com/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post6": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://www.intodeeplearning.com/example-markdown/",
            "relUrl": "/example-markdown/",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "About Me",
          "content": "Hi! I created this site to document my learning in deep learning and research. Hope you can find something useful here! .",
          "url": "https://www.intodeeplearning.com/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  
  

  
  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://www.intodeeplearning.com/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}